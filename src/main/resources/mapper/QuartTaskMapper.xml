<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.learn.quartz.dao.QuartTaskMapper">

    <resultMap id="BaseResultMap" type="com.learn.quartz.pojo.QuartTask">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="group_name" jdbcType="VARCHAR" property="groupName" />
        <result column="job_class" jdbcType="VARCHAR" property="jobClass" />
        <result column="method" jdbcType="VARCHAR" property="method" />
        <result column="corn" jdbcType="VARCHAR" property="corn" />
        <result column="status" jdbcType="INTEGER" property="status" />
    </resultMap>

    <sql id="Base_Column_List">
    id, `name`, `group_name` ,job_class, `method`, corn, `status`
  </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from quart_task
        where id = #{id,jdbcType=INTEGER}
    </select>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from quart_task
    where id = #{id,jdbcType=INTEGER}
  </delete>

    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.learn.quartz.pojo.QuartTask" useGeneratedKeys="true">
    insert into quart_task (`name`, job_class, `method`, 
      corn, `status`)
    values (#{name,jdbcType=VARCHAR}, #{jobClass,jdbcType=VARCHAR}, #{method,jdbcType=VARCHAR}, 
      #{corn,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER})
  </insert>

    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.learn.quartz.pojo.QuartTask" useGeneratedKeys="true">
        insert into quart_task
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                `name`,
            </if>
            <if test="jobClass != null">
                job_class,
            </if>
            <if test="method != null">
                `method`,
            </if>
            <if test="corn != null">
                corn,
            </if>
            <if test="status != null">
                `status`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="jobClass != null">
                #{jobClass,jdbcType=VARCHAR},
            </if>
            <if test="method != null">
                #{method,jdbcType=VARCHAR},
            </if>
            <if test="corn != null">
                #{corn,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.learn.quartz.pojo.QuartTask">
        update quart_task
        <set>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="jobClass != null">
                job_class = #{jobClass,jdbcType=VARCHAR},
            </if>
            <if test="method != null">
                `method` = #{method,jdbcType=VARCHAR},
            </if>
            <if test="corn != null">
                corn = #{corn,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.learn.quartz.pojo.QuartTask">
    update quart_task
    set `name` = #{name,jdbcType=VARCHAR},
      job_class = #{jobClass,jdbcType=VARCHAR},
      `method` = #{method,jdbcType=VARCHAR},
      corn = #{corn,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="getAllTask" resultMap="BaseResultMap">
        select
            <include refid="Base_Column_List"/>
        from
            quart_task
    </select>

    <select id="getActivatedTaskList" resultMap="BaseResultMap">
        select
            <include refid="Base_Column_List"/>
        from
            quart_task
        where
            status = 1
    </select>
</mapper>